// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN
  MODERATOR
}

enum SUBSCRIPTION {
  BASIC
  PREMIUM
}

model User {
  id            String   @id @default(uuid())
  username      String
  email         String
  phonenumber   String?
  rt_hash       String?
  password_hash String
  role          ROLE     @default(USER)
  isGoogleId    Boolean  @default(false)
  googleId      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  verificationToken VerificationToken?
  rooms             Room[] // ðŸ‘ˆ One-to-many relation: one user owns many rooms
}

model VerificationToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  expiresAt DateTime
  token     String
}

model Room {
  id                 String       @id @default(uuid())
  ownerId            String // ðŸ‘ˆ Foreign key
  owner              User         @relation(fields: [ownerId], references: [id]) // ðŸ‘ˆ Relation to User
  name               String
  address            String
  state              String
  pincode            String
  registration_num   String
  subscription       SUBSCRIPTION @default(BASIC)
  subscriptionStatus Boolean
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
}
